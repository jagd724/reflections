When would you want to use a remote repository rather than keeping all your work local?

When I am working with others.
Just to contribute to a community.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because a repository can be accessed by many people and
you do not want to have possible bugs in your code.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork: Only works in github and it is similar to git clone: It copies a 
      repository into your git hub account.

Clone: Works in git. It copies a repository from github to a local machine 
	   or copy a repository in another location in the same machine.

Branch: It is just a method to label change into a repository.

I will use branches when I am working in a repository and want to try
some important changes that can affect the production version. Instead
I will use Clone if I want to collaborate with a github repository making
 changes in my local machine instead of using github website.
I will use fork if I want to copy a repository for free manipulation
without wating approvals of the creator.

What is the benefit of having a copy of the last known state of the remote stored locally?

  If I am about to go without Internet access for a while, for example to work
    on a plane, I can update my local copy before I leave.  I can do this even
    if I'm not ready to merge those changes into my own branches yet.  Then if I
    want, I can perform the merge while offline, or I need to know what the
    remote version is at some point, I have an easy way to access it.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If I have to collaborate without Git or Github I will use tools like OneDrive, GDrive 
or Dropbox to share a folder. It will be a easy fix but the problem will be if collaborators
want to change the same part of the file we will clobber each one changes.

Another solution can be using real time sharing editors like word online or google docs
but the problem with this solution is we can compare the versions and make a mesh that 
creates a bug.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

   I tend to work directly in master more often when I'm working on my own or
    with just one or two other people.  When working with a large group, though,
    using branches to keep track of which changes have already been reviewed and
    approved is extremely helpful.